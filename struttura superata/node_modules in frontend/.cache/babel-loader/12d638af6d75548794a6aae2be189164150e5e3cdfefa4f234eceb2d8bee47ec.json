{"ast":null,"code":"var _jsxFileName = \"/home/helplab.space/public_html/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useContext(AuthContext);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      await login(formData.username, formData.password);\n      alert('Login successful!');\n      navigate('/dashboard');\n    } catch (error) {\n      setError(error || 'Login failed. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: formData.username,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"HqE9U26A8HdCsxUrHNoUNMvJR+I=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","username","password","error","setError","navigate","login","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/home/helplab.space/public_html/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nfunction Login() {\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { login } = useContext(AuthContext);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      await login(formData.username, formData.password);\n      alert('Login successful!');\n      navigate('/dashboard');\n    } catch (error) {\n      setError(error || 'Login failed. Try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleChange} required />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAM,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EAEzC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BR,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACS,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAME,KAAK,CAACP,QAAQ,CAACE,QAAQ,EAAEF,QAAQ,CAACG,QAAQ,CAAC;MACjDY,KAAK,CAAC,mBAAmB,CAAC;MAC1BT,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,IAAI,0BAA0B,CAAC;IAC/C;EACF,CAAC;EAED,oBACEP,OAAA;IAAMmB,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACP,IAAI,EAAC,UAAU;MAACQ,WAAW,EAAC,UAAU;MAACP,KAAK,EAAEZ,QAAQ,CAACE,QAAS;MAACkB,QAAQ,EAAEZ,YAAa;MAACa,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvH5B,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACP,IAAI,EAAC,UAAU;MAACQ,WAAW,EAAC,UAAU;MAACP,KAAK,EAAEZ,QAAQ,CAACG,QAAS;MAACiB,QAAQ,EAAEZ,YAAa;MAACa,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1HrB,KAAK,iBAAIP,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEb;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD5B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAAC1B,EAAA,CA9BQD,KAAK;EAAA,QAGKJ,WAAW;AAAA;AAAAkC,EAAA,GAHrB9B,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}